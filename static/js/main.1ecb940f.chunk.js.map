{"version":3,"sources":["shared/utility.ts","store/actions/auth.tsx","store/actions/actionTypes.tsx","store/reducers/selectors.tsx","components/Login/Form/Form.tsx","components/Login/Login.tsx","consts.ts","hooks/useChat.tsx","components/ChatRoom/MessagesList/MessagesList.tsx","components/ChatRoom/LogoutDialog/LogoutDialog.tsx","components/ChatRoom/ChatRoom.tsx","themes/theme.tsx","themes/global.tsx","components/UI/AlertBox/AlertBox.tsx","App.tsx","hooks/useDarkMode.tsx","serviceWorker.tsx","store/reducers/auth.tsx","store/reducers/index.tsx","api/user.ts","shared/axios.ts","store/sagas/auth.tsx","store/sagas/index.tsx","index.tsx","components/ChatRoom/ChatRoom.module.scss","components/ChatRoom/MessagesList/MessagesList.module.scss","App.module.scss","components/Login/Login.module.scss","components/Login/Form/Form.module.scss"],"names":["updateObject","oldState","updatedProperties","typedAction","type","payload","transformDateToUnix","currentDate","moment","unix","signInWithUsernameSuccess","user","getUserFromLocalStorageSuccess","selectCurrentUser","state","authReducer","selectSignInLoading","loading","selectSignInError","error","userExists","createSelector","currentUser","Container","styled","div","theme","loginLabel","StyledInput","input","formInput","text","StyledButton","button","formButton","background","color","Form","submit","fileError","useState","username","setUsername","file","setFile","loadingFile","setLoadingFile","useEffect","setTimeout","buttonText","className","styles","onSubmit","e","preventDefault","formData","FormData","append","handleSubmit","encType","onChange","target","value","trim","placeholder","disabled","accept","Input","id","currentTarget","files","extension","name","split","toLowerCase","includes","size","fileValidation","htmlFor","Button","UploadButton","variant","component","ChatEvent","Label","label","Login","authMode","setAuthMode","useSelector","dispatch","useDispatch","signInUsername","signInWithUsername","SwitchTransition","mode","CSSTransition","key","addEndListener","node","done","addEventListener","classNames","enter","FadeEnter","enterActive","FadeEnterActive","exit","FadeExit","exitActive","FadeExitActive","newUser","onClick","useChat","messages","setMessages","currentlyOnlineUsers","setCurrentlyOnlineUsers","socketRef","useRef","fetchLatestMessages","useCallback","current","emit","InitMessages","_id","socketIOClient","process","on","NewMessage","message","onlineUsers","reverse","Disconnect","disconnect","sendMessage","body","createdAt","StyledBadge","withStyles","createStyles","badge","backgroundColor","boxShadow","palette","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","Badge","MessageItem","userId","messageClass","Sent","Received","timestamp","date","Date","fromNow","transformUnixToDateSent","online","Object","keys","MessageContainer","MessageTop","overlap","anchorOrigin","vertical","horizontal","Avatar","alt","src","avatar","Timestamp","MessageBody","Username","React","memo","map","item","index","List","LogoutDialog","show","handleClose","logout","Dialog","style","textAlign","open","onClose","DialogContent","ChatRoom","toggleTheme","showDialog","setShowDialog","anchorEl","setAnchorEl","scrollToDummyDiv","setMessage","handleMenuClose","scrollIntoView","behavior","submitMessage","handleDialogClose","length","Header","ThemeToggle","Tooltip","title","IconButton","Menu","event","keepMounted","Boolean","MenuItem","Section","Main","ref","onFocus","isMobile","onKeyPress","shiftKey","textareaEnterPressed","Textarea","fontSize","lightTheme","darkTheme","GlobalStyles","createGlobalStyle","AlertBox","closeAlert","reason","Snackbar","autoHideDuration","action","Fragment","aria-label","App","setTheme","setMode","window","localStorage","setItem","localTheme","getItem","useDarkMode","themeMode","isAuthenticated","tryAutomaticSignin","location","hostname","match","initialState","signInWithUsernameStartHelper","signInWithUsernameSuccessHelper","signInWithUsernameFailedHelper","logoutUserSuccessHelper","getUserFromLocalStorageHelper","fileValidationHelper","closeSnackbarHelper","rootReducer","combineReducers","userApi","this","post","response","data","delete","api","apiConfig","timeout","baseURL","headers","common","Accept","axios","create","interceptors","use","res","Promise","reject","url","config","get","put","signInUsernameSaga","logoutUserSaga","getUserFromLocalStorageSaga","delay","call","signinNewUser","JSON","stringify","deleteUser","parse","takeEvery","rootSaga","all","AuthSagas","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","module","exports"],"mappings":"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","file":"static/js/main.1ecb940f.chunk.js","sourcesContent":["import moment from \"moment\";\r\n\r\nexport function updateObject<T, U>(oldState: T, updatedProperties: U): T {\r\n    return { ...oldState, ...updatedProperties };\r\n}\r\n\r\nexport function typedAction<T extends string>(type: T): { type: T };\r\n\r\nexport function typedAction<T extends string, P extends any>(\r\n    type: T,\r\n    payload: P\r\n): { type: T; payload: P };\r\n\r\nexport function typedAction(type: string, payload?: any) {\r\n    return { type, payload };\r\n}\r\n\r\nexport const transformDateToUnix = (): number => {\r\n    const currentDate = moment();\r\n    return moment(currentDate).unix();\r\n}\r\n\r\nexport const transformUnixToDateSent = (timestamp: number): string => {\r\n    const date = new Date(timestamp * 1000);\r\n    return moment(date).fromNow();\r\n}\r\n\r\nexport const fileValidation = (file: File): boolean => {\r\n    const acceptedType = ['jpg', 'jpeg', 'png'];\r\n    const extension = file.name.split('.')[1].toLowerCase();\r\n    const maxSize = 2000000;\r\n    if (!acceptedType.includes(extension) || file.size >= maxSize) return false;\r\n    return true;\r\n}","import * as actionTypes from './actionTypes';\r\nimport { typedAction } from '../../shared/utility';\r\nimport { User } from '../../types';\r\n\r\nexport const signInWithUsername = (user: User) => {\r\n    return typedAction(actionTypes.SIGN_IN_USERNAME, user);\r\n}\r\n\r\nexport const signInWithUsernameStart = () => {\r\n    return typedAction(actionTypes.SIGN_IN_USERNAME_START);\r\n}\r\n\r\nexport const signInWithUsernameSuccess = (user: User) => {\r\n    return typedAction(actionTypes.SIGN_IN_USERNAME_SUCCESS, user);\r\n}\r\n\r\nexport const signInWithUsernameFailed = (error: string) => {\r\n    return typedAction(actionTypes.SIGN_IN_USERNAME_FAILED, error);\r\n}\r\n\r\nexport const logoutUser = (id: string) => {\r\n    return typedAction(actionTypes.LOGOUT_USER, id);\r\n}\r\n\r\nexport const logoutUserSuccess = () => {\r\n    return typedAction(actionTypes.LOGOUT_USER_SUCCESS);\r\n}\r\n\r\nexport const logoutUserFailed = (error: string) => {\r\n    return typedAction(actionTypes.LOGOUT_USER_FAILED, error);\r\n}\r\n\r\nexport const getUserFromLocalStorage = () => {\r\n    return typedAction(actionTypes.GET_USER_LOCAL_STORAGE);\r\n}\r\n\r\nexport const getUserFromLocalStorageSuccess = (user: User | null) => {\r\n    return typedAction(actionTypes.GET_USER_LOCAL_STORAGE_SUCCESS, user);\r\n}\r\n\r\nexport const fileValidationError = () => {\r\n    return typedAction(actionTypes.FILE_VALIDATION_ERROR);\r\n}\r\n\r\nexport const closeSnackbar = () => {\r\n    return typedAction(actionTypes.CLOSE_SNACKBAR);\r\n}\r\n\r\nexport type AuthActions =\r\n    ReturnType<\r\n        typeof signInWithUsername |\r\n        typeof signInWithUsernameSuccess |\r\n        typeof signInWithUsernameStart |\r\n        typeof signInWithUsernameFailed |\r\n        typeof logoutUser |\r\n        typeof logoutUserSuccess |\r\n        typeof getUserFromLocalStorage |\r\n        typeof getUserFromLocalStorageSuccess |\r\n        typeof fileValidationError |\r\n        typeof logoutUserFailed |\r\n        typeof closeSnackbar\r\n    >;","export const SIGN_IN_USERNAME_SUCCESS = 'SIGN_IN_USERNAME_SUCCESS';\r\nexport const SIGN_IN_USERNAME_FAILED = 'SIGN_IN_USERNAME_FAILED';\r\nexport const SIGN_IN_USERNAME_START = 'SIGN_IN_USERNAME_START';\r\nexport const SIGN_IN_USERNAME = 'SIGN_IN_USERNAME';\r\n\r\nexport const LOGOUT_USER_SUCCESS = 'LOGOUT_USER_SUCCESS';\r\nexport const LOGOUT_USER_FAILED = 'LOGOUT_USER_FAILED';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\n\r\nexport const GET_USER_LOCAL_STORAGE_SUCCESS = 'GET_USER_LOCAL_STORAGE_SUCCESS';\r\nexport const GET_USER_LOCAL_STORAGE = 'GET_USER_LOCAL_STORAGE';\r\n\r\nexport const FILE_VALIDATION_ERROR = 'FILE_VALIDATION_ERROR';\r\n\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';","import { RootState } from './index';\r\nimport { createSelector } from 'reselect';\r\n\r\nexport const selectCurrentUser = (state: RootState) => state.authReducer.user;\r\nexport const selectSignInLoading = (state: RootState) => state.authReducer.loading;\r\nexport const selectSignInError = (state: RootState) => state.authReducer.error;\r\n\r\nexport const userExists = createSelector(\r\n    selectCurrentUser, currentUser => {\r\n        return currentUser !== null;\r\n    }\r\n)","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './Form.module.scss';\r\nimport styled from 'styled-components'\r\nimport { fileValidation } from '../../../shared/utility';\r\n\r\nconst Container = styled.div`\r\nwidth: 400px;\r\nheight: 65px;\r\nposition: relative;\r\npadding: 0.625em;\r\nbox-sizing: border-box;\r\nfont-weight: 700;\r\nbox-sizing: border-box;\r\nbox-shadow: 0 0.125em 0.3125em rgba(0, 0, 0, 0.3);\r\ndisplay: flex;\r\njustify-content: center;\r\nborder-radius: 6.25em;\r\nbackground-color: ${({ theme }) => theme.loginLabel};\r\ntransition: 300ms;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\nfont-weight: 700;\r\nfont-size: 18px;\r\nborder: 0;\r\noutline: 0;\r\nborder-radius: 5em;\r\nbox-sizing: border-box;\r\nheight: 100%;\r\nwidth: 100%;\r\npadding: 0 0.714em;\r\nbackground-color: ${({ theme }) => theme.formInput};\r\ncolor: ${({ theme }) => theme.text};`;\r\n\r\nconst StyledButton = styled.button`\r\nbackground-color: ${({ theme }) => theme.formButton.background};\r\ncolor: ${({ theme }) => theme.formButton.color};\r\nheight: 100%;\r\nwidth: auto;\r\nfont-size: 18px;\r\npadding: 0;\r\nheight: 100%;\r\nwidth: 160px;\r\nborder: 0;\r\nfont-weight: 700;\r\noutline: 0;\r\nborder-radius: 5em;\r\nbox-sizing: border-box;\r\ncursor: pointer;`\r\n\r\ninterface Props {\r\n    submit: (formData: any) => void;\r\n    fileError: () => void;\r\n}\r\n\r\nconst Form: React.FC<Props> = ({ submit, fileError }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [file, setFile] = useState<File | null>(null);\r\n    const [loadingFile, setLoadingFile] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (file) {\r\n            setLoadingFile(true);\r\n            setTimeout(() => {\r\n                setLoadingFile(false);\r\n            }, 1000)\r\n        }\r\n\r\n    }, [file])\r\n\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        if (file) {\r\n            formData.append('file', file);\r\n        }\r\n        formData.append('username', username);\r\n        submit(formData);\r\n    }\r\n\r\n    const handleFileChanged = (e: React.FormEvent<HTMLInputElement>) => {\r\n        const file = e.currentTarget.files ? e.currentTarget.files[0] : null;\r\n        if (file) {\r\n            if (fileValidation(file)) {\r\n                setFile(file);\r\n            } else {\r\n                fileError();\r\n            }\r\n        }\r\n    }\r\n\r\n    let buttonText = 'Upload Profile Picture';\r\n    if (loadingFile) {\r\n        buttonText = 'Uploading File...';\r\n    }\r\n    if (file && !loadingFile) {\r\n        buttonText = 'Success!';\r\n    }\r\n\r\n\r\n    return (\r\n        <form className={styles.Form}\r\n            onSubmit={(e) => handleSubmit(e)}\r\n            encType=\"multipart/form-data\">\r\n            <Container>\r\n                <StyledInput\r\n                    onChange={(e) => setUsername(e.target.value.trim())}\r\n                    type=\"text\"\r\n                    placeholder=\"Username\" />\r\n                <StyledButton disabled={username === ''} type=\"submit\">Let's Go!</StyledButton>\r\n            </Container>\r\n            <input\r\n                accept=\"image/*\"\r\n                className={styles.Input}\r\n                id=\"contained-button-file\"\r\n                type=\"file\"\r\n                onChange={handleFileChanged}\r\n            />\r\n            <label htmlFor=\"contained-button-file\">\r\n                <Button\r\n                    className={styles.UploadButton}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    component=\"span\">\r\n                    {buttonText}\r\n                </Button>\r\n            </label>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React, { useState } from 'react';\r\nimport styles from './Login.module.scss';\r\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fileValidationError, signInWithUsername } from '../../store/actions/auth';\r\nimport { selectSignInLoading } from '../../store/reducers/selectors';\r\nimport { User } from '../../types';\r\nimport styled from 'styled-components'\r\nimport Form from './Form/Form';\r\n\r\nconst Label = styled.label`\r\nborder-radius: 6.25em;\r\nbackground-color: ${({ theme }) => theme.loginLabel};\r\nwidth: 200px;\r\nheight: 65px;\r\noutline: 0;\r\nborder: none;\r\ncursor: pointer;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nfont-size: 20px;\r\nfont-weight: 700;\r\n`;\r\n\r\nconst Login: React.FC = () => {\r\n    const [authMode, setAuthMode] = useState(false);\r\n\r\n    const loading = useSelector(selectSignInLoading);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const signInUsername = (user: User) => dispatch(signInWithUsername(user));\r\n    const fileInvalid = () => dispatch(fileValidationError());\r\n\r\n    const connectToChatRoom = (newUser: User) => {\r\n        setAuthMode(false);\r\n        signInUsername(newUser);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Login}>\r\n            <SwitchTransition mode=\"out-in\">\r\n                <CSSTransition\r\n                    key={authMode ? \"Form\" : \"Button\"}\r\n                    addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\r\n                    classNames={{\r\n                        enter: styles.FadeEnter,\r\n                        enterActive: styles.FadeEnterActive,\r\n                        exit: styles.FadeExit,\r\n                        exitActive: styles.FadeExitActive\r\n                    }}>\r\n                    {authMode\r\n                        ? <Form\r\n                            fileError={fileInvalid}\r\n                            submit={(user: User) => connectToChatRoom(user)} />\r\n                        : <Label\r\n                            onClick={() => !loading && setAuthMode(true)}>\r\n                            {loading ? 'Connecting...' : 'Start Chatting!'}\r\n                        </Label>}\r\n                </CSSTransition>\r\n            </SwitchTransition>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","export const BASE_URL = process.env.REACT_APP_LOCALHOST || '';\r\n\r\nexport enum ChatEvent {\r\n    InitMessages = 'InitMessages',\r\n    NewMessage = 'NewMessage',\r\n    Disconnect = 'disconnect'\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { BASE_URL, ChatEvent } from \"../consts\";\r\nimport { transformDateToUnix } from \"../shared/utility\";\r\nimport { selectCurrentUser } from \"../store/reducers/selectors\";\r\nimport { Message, OnlineUsers } from \"../types\";\r\n\r\nconst useChat = () => {\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [currentlyOnlineUsers, setCurrentlyOnlineUsers] = useState<OnlineUsers>({});\r\n\r\n    const user = useSelector(selectCurrentUser);\r\n\r\n    const socketRef = useRef<SocketIOClient.Socket>();\r\n\r\n    const fetchLatestMessages = useCallback(() => {\r\n        socketRef.current?.emit(ChatEvent.InitMessages, user?._id);\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if (user) {\r\n\r\n            socketRef.current = socketIOClient(BASE_URL);\r\n\r\n            socketRef.current.on(ChatEvent.NewMessage, (message: Message) => {\r\n                setMessages((messages) => [...messages, message]);\r\n            });\r\n\r\n            socketRef.current.on(ChatEvent.InitMessages, (messages: Message[], onlineUsers: OnlineUsers) => {\r\n                setCurrentlyOnlineUsers(onlineUsers);\r\n                setMessages(messages.reverse());\r\n            });\r\n\r\n            socketRef.current.on(ChatEvent.Disconnect, (onlineUsers: OnlineUsers | string) => {\r\n                if (typeof onlineUsers !== 'string') {\r\n                    setCurrentlyOnlineUsers(onlineUsers);\r\n                }\r\n            });\r\n\r\n            fetchLatestMessages();\r\n\r\n        }\r\n        return () => {\r\n            socketRef.current?.disconnect();\r\n        };\r\n    }, [user, fetchLatestMessages]);\r\n\r\n    const sendMessage = (message: string) => {\r\n        socketRef.current?.emit(ChatEvent.NewMessage, {\r\n            user: user,\r\n            body: message,\r\n            createdAt: transformDateToUnix()\r\n        });\r\n    };\r\n\r\n\r\n    return { messages, sendMessage, user, currentlyOnlineUsers };\r\n};\r\n\r\nexport default useChat;","import React from 'react';\r\nimport { transformUnixToDateSent } from '../../../shared/utility';\r\nimport { Message, OnlineUsers } from '../../../types';\r\nimport styles from './MessagesList.module.scss';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Theme, withStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledBadge = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        badge: {\r\n            backgroundColor: '#44b700',\r\n            color: '#44b700',\r\n            boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n            '&::after': {\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                width: '100%',\r\n                height: '100%',\r\n                borderRadius: '50%',\r\n                animation: '$ripple 1.2s infinite ease-in-out',\r\n                border: '1px solid currentColor',\r\n                content: '\"\"',\r\n            },\r\n        },\r\n        '@keyframes ripple': {\r\n            '0%': {\r\n                transform: 'scale(.8)',\r\n                opacity: 1,\r\n            },\r\n            '100%': {\r\n                transform: 'scale(2.4)',\r\n                opacity: 0,\r\n            },\r\n        },\r\n    }),\r\n)(Badge);\r\n\r\n\r\ninterface ListProps {\r\n    messages: Message[];\r\n    currentlyOnlineUsers: OnlineUsers;\r\n    userId: string | undefined;\r\n}\r\n\r\ninterface ItemProps {\r\n    message: Message;\r\n    currentlyOnlineUsers: OnlineUsers;\r\n    userId: string | undefined;\r\n}\r\n\r\nconst MessageItem: React.FC<ItemProps> = ({ message, userId, currentlyOnlineUsers }) => {\r\n    const messageClass = userId === message.user._id ? styles.Sent : styles.Received;\r\n    const timestamp = transformUnixToDateSent(message.createdAt);\r\n    const online = Object.keys(currentlyOnlineUsers).includes(message.user._id ? message.user._id : '');\r\n    return (\r\n        <div className={`${styles.MessageContainer} ${messageClass}`}>\r\n            <div className={styles.MessageTop}>\r\n                {online\r\n                    ? <StyledBadge\r\n                        overlap=\"circle\"\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        variant=\"dot\">\r\n                        <Avatar alt={message.user.username} src={message.user.avatar} />\r\n                    </StyledBadge>\r\n                    : <Avatar alt={message.user.username} src={message.user.avatar} />}\r\n                <p className={styles.Timestamp}>{timestamp}</p>\r\n            </div>\r\n            <div className={`${styles.MessageBody} ${messageClass}`}>\r\n                {userId !== message.user._id && <p\r\n                    className={styles.Username}>\r\n                    {message.user.username}\r\n                </p>}\r\n                <p>{message.body}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MessagesList: React.FC<ListProps> = ({ messages, userId, currentlyOnlineUsers }) => {\r\n    const content = messages.map((item, index) => (\r\n        <MessageItem\r\n            key={`${item._id}${index}`}\r\n            message={item}\r\n            userId={userId}\r\n            currentlyOnlineUsers={currentlyOnlineUsers}\r\n        />\r\n    ));\r\n    return (\r\n        <div className={styles.List}>\r\n            {content}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(MessagesList);","import React from 'react';\r\nimport { Dialog, DialogContent } from '@material-ui/core';\r\nimport DialogTitle from '@material-ui/core/DialogTitle/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions/DialogActions';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport DialogContentText from '@material-ui/core/DialogContentText/DialogContentText';\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    handleClose: () => void;\r\n    logout: () => void;\r\n}\r\n\r\nconst LogoutDialog: React.FC<Props> = ({ show, handleClose, logout }) => {\r\n    return (\r\n        <Dialog\r\n            style={{ textAlign: 'center' }}\r\n            open={show}\r\n            onClose={handleClose}>\r\n            <DialogTitle >\r\n                Are you sure?\r\n        </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    If you log out all your data will be lost!\r\n        </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={logout} color=\"primary\">\r\n                    Confirm</Button>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Cancel</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default LogoutDialog;","import React, { useEffect, useRef, useState } from 'react';\r\nimport styles from './ChatRoom.module.scss';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { logoutUser } from '../../store/actions/auth';\r\nimport { useDispatch } from 'react-redux';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport useChat from '../../hooks/useChat';\r\nimport MessagesList from './MessagesList/MessagesList';\r\nimport { isMobile } from 'react-device-detect';\r\nimport LogoutDialog from './LogoutDialog/LogoutDialog';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { IconButton } from '@material-ui/core';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\ninterface Props {\r\n    theme: string;\r\n    toggleTheme: () => void;\r\n}\r\n\r\nconst ChatRoom: React.FC<Props> = ({ theme, toggleTheme }) => {\r\n    const { messages, sendMessage, user, currentlyOnlineUsers } = useChat();\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    const scrollToDummyDiv = useRef<HTMLDivElement>(null);\r\n\r\n    const [message, setMessage] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutCurrentUser = () => {\r\n        dispatch(logoutUser(user?._id ? user._id : ''));\r\n        handleDialogClose();\r\n    };\r\n\r\n    const handleMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => setAnchorEl(event.currentTarget);\r\n    const handleMenuClose = () => setAnchorEl(null);\r\n\r\n    useEffect(() => {\r\n        scrollToDummyDiv.current?.scrollIntoView({\r\n            behavior: 'smooth'\r\n        });\r\n    }, [messages]);\r\n\r\n    const textareaEnterPressed = (e: React.KeyboardEvent) => {\r\n        if (isMobile) return;\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            submitMessage(e);\r\n        }\r\n    }\r\n\r\n    const submitMessage = (e: React.SyntheticEvent<EventTarget>) => {\r\n        e.preventDefault();\r\n        if (message.trim() !== '') {\r\n            sendMessage(message);\r\n        }\r\n        setMessage('');\r\n    }\r\n\r\n    const handleDialogClose = () => setShowDialog(false);\r\n\r\n    const handleLogoutClicked = () => {\r\n        setShowDialog(true);\r\n        handleMenuClose();\r\n    }\r\n\r\n    const handleMobileFocus = () => {\r\n        if (isMobile) {\r\n            setTimeout(() => {\r\n                scrollToDummyDiv.current?.scrollIntoView({\r\n                    behavior: 'smooth'\r\n                });\r\n            }, 100)\r\n        }\r\n    }\r\n\r\n    const onlineUsers = Object.keys(currentlyOnlineUsers).length;\r\n\r\n    return (\r\n        <div className={styles.ChatRoom}>\r\n            <header className={styles.Header}>\r\n                <h2>{onlineUsers} Online</h2>\r\n                <div className={styles.ThemeToggle}>\r\n                    {theme === 'light'\r\n                        ? <Tooltip title=\"Toggle Dark Theme\">\r\n                            <Brightness4Icon onClick={toggleTheme} />\r\n                        </Tooltip>\r\n                        : <Tooltip title=\"Toggle Light Theme\">\r\n                            <Brightness7Icon onClick={toggleTheme} />\r\n                        </Tooltip>}\r\n                </div>\r\n                <IconButton className={styles.Menu} color=\"inherit\" onClick={handleMenuClick}>\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleMenuClose}\r\n                >\r\n                    <MenuItem onClick={handleLogoutClicked}>Logout</MenuItem>\r\n                </Menu>\r\n            </header>\r\n            <section className={styles.Section}>\r\n                <main className={styles.Main}>\r\n                    <MessagesList\r\n                        messages={messages}\r\n                        userId={user?._id && user._id}\r\n                        currentlyOnlineUsers={currentlyOnlineUsers}\r\n                    />\r\n                    <div ref={scrollToDummyDiv}></div>\r\n                </main>\r\n                <form className={styles.Form} onSubmit={submitMessage}>\r\n                    <textarea\r\n                        placeholder=\"Start typing here...\"\r\n                        value={message}\r\n                        onFocus={handleMobileFocus}\r\n                        onKeyPress={e => textareaEnterPressed(e)}\r\n                        onChange={e => setMessage(e.target.value)}\r\n                        className={styles.Textarea}></textarea>\r\n                    {message !== '' && <button className={styles.Button} type=\"submit\">\r\n                        <SendIcon fontSize=\"large\" style={{ color: '#6649b8' }} />\r\n                    </button>}\r\n                </form>\r\n            </section>\r\n            <LogoutDialog\r\n                show={showDialog}\r\n                handleClose={handleDialogClose}\r\n                logout={logoutCurrentUser} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;","import { DefaultTheme } from \"styled-components\"\r\n\r\ndeclare module \"styled-components\" {\r\n    export interface DefaultTheme {\r\n        loginLabel: string;\r\n        formButton: {\r\n            color: string;\r\n            background: string;\r\n        };\r\n        formInput: string;\r\n        body: string;\r\n        text: string;\r\n    }\r\n}\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n    loginLabel: '#1c1f25',\r\n    formButton: {\r\n        color: '#1c1f25',\r\n        background: 'white'\r\n    },\r\n    formInput: '#1c1f25',\r\n    body: '#E2E2E2',\r\n    text: 'white'\r\n}\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n    loginLabel: 'white',\r\n    formButton: {\r\n        color: 'white',\r\n        background: '#282c34'\r\n    },\r\n    formInput: 'white',\r\n    body: '#1c1f25',\r\n    text: '#1c1f25'\r\n}","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    font-size: 10px;\r\n    background-color: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    height: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: \"Open Sans\", sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }`","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeSnackbar } from '../../../store/actions/auth';\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    error: string;\r\n}\r\n\r\nconst AlertBox: React.FC<Props> = ({ open, error }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const closeAlert = () => dispatch(closeSnackbar());\r\n\r\n    const handleClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        closeAlert();\r\n    };\r\n\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n            }}\r\n            open={open}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n            message={error}\r\n            action={\r\n                <React.Fragment>\r\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                        <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                </React.Fragment>\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AlertBox;","import React, { useCallback, useEffect } from 'react';\r\nimport styles from './App.module.scss';\r\nimport Login from './components/Login/Login';\r\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\r\nimport ChatRoom from './components/ChatRoom/ChatRoom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectSignInError, userExists } from './store/reducers/selectors';\r\nimport { getUserFromLocalStorage } from './store/actions/auth';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { darkTheme, lightTheme } from './themes/theme';\r\nimport { GlobalStyles } from './themes/global';\r\nimport { useDarkMode } from './hooks/useDarkMode';\r\nimport AlertBox from './components/UI/AlertBox/AlertBox';\r\n\r\n\r\nconst App: React.FC = () => {\r\n  const { theme, toggleTheme } = useDarkMode();\r\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\r\n\r\n  const isAuthenticated = useSelector(userExists);\r\n  const error = useSelector(selectSignInError);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const tryAutomaticSignin = useCallback(() => dispatch(getUserFromLocalStorage()), [dispatch]);\r\n\r\n  useEffect(() => {\r\n    tryAutomaticSignin();\r\n  }, [tryAutomaticSignin])\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={themeMode}>\r\n      <GlobalStyles />\r\n      <div className={styles.App}>\r\n        <SwitchTransition mode=\"out-in\">\r\n          <CSSTransition\r\n            key={isAuthenticated ? \"ChatRoom\" : \"Login\"}\r\n            addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\r\n            classNames={{\r\n              enter: styles.FadeEnter,\r\n              enterActive: styles.FadeEnterActive,\r\n              exit: styles.FadeExit,\r\n              exitActive: styles.FadeExitActive\r\n            }}>\r\n            {isAuthenticated ? <ChatRoom toggleTheme={toggleTheme} theme={theme} /> : <Login />}\r\n          </CSSTransition>\r\n        </SwitchTransition>\r\n      </div>\r\n      <AlertBox open={error !== ''} error={error} />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useState } from 'react';\r\nexport const useDarkMode = () => {\r\n    const [theme, setTheme] = useState('dark');\r\n\r\n    const setMode = (mode: string) => {\r\n        window.localStorage.setItem('theme', mode)\r\n        setTheme(mode)\r\n    };\r\n\r\n    const toggleTheme = () => {\r\n        if (theme === 'light') {\r\n            setMode('dark');\r\n        } else {\r\n            setMode('light');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const localTheme = window.localStorage.getItem('theme');\r\n        if (localTheme) {\r\n            setTheme(localTheme);\r\n        } else {\r\n            setMode('dark');\r\n        }\r\n    }, []);\r\n\r\n    return { theme, toggleTheme }\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\nimport { AuthActions } from '../actions/auth';\r\nimport { User } from '../../types';\r\n\r\ninterface AuthState {\r\n    user: User | null;\r\n    loading: boolean;\r\n    error: string;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n    user: null,\r\n    loading: false,\r\n    error: '',\r\n}\r\n\r\nconst authReducer = (state = initialState, action: AuthActions) => {\r\n    switch (action.type) {\r\n        case actionTypes.SIGN_IN_USERNAME_START:\r\n            return signInWithUsernameStartHelper(state);\r\n        case actionTypes.SIGN_IN_USERNAME_SUCCESS:\r\n            return signInWithUsernameSuccessHelper(state, action.payload);\r\n        case actionTypes.SIGN_IN_USERNAME_FAILED:\r\n            return signInWithUsernameFailedHelper(state, action.payload);\r\n        case actionTypes.LOGOUT_USER_FAILED:\r\n        case actionTypes.LOGOUT_USER_SUCCESS:\r\n            return logoutUserSuccessHelper(state);\r\n        case actionTypes.GET_USER_LOCAL_STORAGE_SUCCESS:\r\n            return getUserFromLocalStorageHelper(state, action.payload);\r\n        case actionTypes.CLOSE_SNACKBAR:\r\n            return closeSnackbarHelper(state);\r\n        case actionTypes.FILE_VALIDATION_ERROR:\r\n            return fileValidationHelper(state);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst signInWithUsernameStartHelper = (state: AuthState): AuthState => {\r\n    return updateObject(state, { loading: true });\r\n}\r\n\r\nconst signInWithUsernameSuccessHelper = (state: AuthState, payload: User): AuthState => {\r\n    return updateObject(state, { user: payload, loading: false, error: '' });\r\n}\r\n\r\nconst signInWithUsernameFailedHelper = (state: AuthState, payload: string): AuthState => {\r\n    return updateObject(state, { loading: false, error: payload });\r\n}\r\n\r\nconst logoutUserSuccessHelper = (state: AuthState): AuthState => {\r\n    return updateObject(state, { user: null });\r\n}\r\n\r\nconst getUserFromLocalStorageHelper = (state: AuthState, payload: User | null): AuthState => {\r\n    return updateObject(state, { user: payload });\r\n}\r\n\r\nconst fileValidationHelper = (state: AuthState): AuthState => {\r\n    return updateObject(state, { error: 'Only JPG/PNG files under 4MB allowed.' });\r\n}\r\n\r\nconst closeSnackbarHelper = (state: AuthState): AuthState => {\r\n    return updateObject(state, { error: '' });\r\n}\r\n\r\nexport default authReducer;\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './auth';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    authReducer: authReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { Api } from \"../shared/axios\";\r\nimport { User } from \"../types\";\r\n\r\nclass UserApi extends Api {\r\n\r\n    public async signinNewUser(user: User): Promise<User> {\r\n        const response = await this.post<User, User>('/user', user);\r\n        return response.data;\r\n    }\r\n\r\n    public async deleteUser(id: string): Promise<number> {\r\n        const response = await this.delete<string, number>(`/user/${id}`);\r\n        return response;\r\n    }\r\n\r\n}\r\n\r\nexport const userApi = new UserApi();","import axios, { AxiosError, AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport { BASE_URL } from \"../consts\";\r\n\r\nexport class Api {\r\n    private api: AxiosInstance;\r\n\r\n    private apiConfig: AxiosRequestConfig = {\r\n        timeout: 15000,\r\n        baseURL: BASE_URL,\r\n        headers: {\r\n            common: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n        }\r\n    };\r\n\r\n    constructor() {\r\n        this.api = axios.create(this.apiConfig);\r\n\r\n        this.api.interceptors.response.use((res: AxiosResponse) => res, (error: AxiosError) => {\r\n            return Promise.reject(error.response?.data.message);\r\n        });\r\n    }\r\n\r\n    public get<T, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\r\n        return this.api.get(url, config);\r\n    }\r\n\r\n    public post<T, D, R = AxiosResponse<T>>(url: string, data: D, config?: AxiosRequestConfig): Promise<R> {\r\n        return this.api.post(url, data, config);\r\n    }\r\n\r\n    public delete<T, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\r\n        return this.api.delete(url, config);\r\n    }\r\n\r\n    public put<T, D, R = AxiosResponse<T>>(url: string, data: D, config?: AxiosRequestConfig): Promise<R> {\r\n        return this.api.put(url, data, config);\r\n    }\r\n}","import { call, delay, put, takeEvery } from 'redux-saga/effects';\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport { getUserFromLocalStorageSuccess, logoutUser, logoutUserFailed, logoutUserSuccess, signInWithUsernameFailed, signInWithUsernameStart, signInWithUsernameSuccess } from '../actions/auth';\r\nimport { userApi } from '../../api/user';\r\nimport { User } from '../../types';\r\n\r\nfunction* signInUsernameSaga(action: ReturnType<typeof signInWithUsernameSuccess>) {\r\n    yield put(signInWithUsernameStart());\r\n    yield delay(500);\r\n    try {\r\n        const user: User = yield call(() => userApi.signinNewUser(action.payload));\r\n        yield call([localStorage, 'setItem'], 'currentUser', JSON.stringify(user));\r\n        yield put(signInWithUsernameSuccess(user));\r\n    } catch (e) {\r\n        yield put(signInWithUsernameFailed(e));\r\n    }\r\n}\r\n\r\nfunction* logoutUserSaga(action: ReturnType<typeof logoutUser>) {\r\n    try {\r\n        yield call(() => userApi.deleteUser(action.payload));\r\n        yield put(logoutUserSuccess());\r\n    } catch (e) {\r\n        yield put(logoutUserFailed(e));\r\n    }\r\n    yield call([localStorage, 'removeItem'], 'currentUser');\r\n    yield delay(300);\r\n}\r\n\r\nfunction* getUserFromLocalStorageSaga() {\r\n    const user = yield call([localStorage, 'getItem'], 'currentUser');\r\n    yield put(getUserFromLocalStorageSuccess(JSON.parse(user)));\r\n}\r\n\r\n\r\nexport default [\r\n    takeEvery(actionTypes.SIGN_IN_USERNAME, signInUsernameSaga),\r\n    takeEvery(actionTypes.LOGOUT_USER, logoutUserSaga),\r\n    takeEvery(actionTypes.GET_USER_LOCAL_STORAGE, getUserFromLocalStorageSaga)\r\n\r\n]\r\n","import AuthSagas from './auth';\r\nimport { all } from 'redux-saga/effects';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        ...AuthSagas\r\n    ])\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { rootReducer } from './store/reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './store/sagas/index';\n\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatRoom\":\"ChatRoom_ChatRoom__1wWXC\",\"Header\":\"ChatRoom_Header__1nsHl\",\"Menu\":\"ChatRoom_Menu__UrlIj\",\"ThemeToggle\":\"ChatRoom_ThemeToggle__r2urn\",\"Section\":\"ChatRoom_Section__3G7Gw\",\"Main\":\"ChatRoom_Main__3yd-j\",\"Form\":\"ChatRoom_Form__S9-hN\",\"Textarea\":\"ChatRoom_Textarea__B0n_x\",\"Button\":\"ChatRoom_Button__3toSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"MessagesList_List__FWKb1\",\"MessageContainer\":\"MessagesList_MessageContainer__3ktq6\",\"Sent\":\"MessagesList_Sent__UWx0E\",\"MessageTop\":\"MessagesList_MessageTop__3831z\",\"MessageBody\":\"MessagesList_MessageBody__3qzfP\",\"Received\":\"MessagesList_Received__23zvc\",\"Username\":\"MessagesList_Username__2MU3T\",\"Timestamp\":\"MessagesList_Timestamp__3dzyR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__34i3s\",\"FadeEnter\":\"App_FadeEnter__1uJf1\",\"FadeExit\":\"App_FadeExit__25tik\",\"FadeEnterActive\":\"App_FadeEnterActive__1Ptu1\",\"FadeExitActive\":\"App_FadeExitActive__2WYg3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__DI4NL\",\"Form\":\"Login_Form__1kJZN\",\"FadeEnter\":\"Login_FadeEnter__GldiS\",\"FadeExit\":\"Login_FadeExit__q7x44\",\"FadeEnterActive\":\"Login_FadeEnterActive__1T2q_\",\"FadeExitActive\":\"Login_FadeExitActive__W_-zu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Form_Input__7pthK\",\"UploadButton\":\"Form_UploadButton__3GuAJ\"};"],"sourceRoot":""}