{"version":3,"sources":["components/Header/Header.module.scss","components/MessagesList/MessagesList.module.scss","assets/notification-sound.mp3","shared/utility.ts","store/actions/auth.tsx","store/actions/actionTypes.tsx","store/reducers/selectors.tsx","components/LoginForm/LoginForm.tsx","containers/Login/Login.tsx","consts.ts","hooks/useChat.tsx","components/MessagesList/MessagesItem/MessagesItem.tsx","components/MessagesList/MessagesList.tsx","components/UI/LogoutDialog/LogoutDialog.tsx","components/NewMessageForm/NewMessageForm.tsx","components/Header/Header.tsx","containers/ChatRoom/ChatRoom.tsx","components/UI/AlertBox/AlertBox.tsx","App.tsx","serviceWorker.tsx","store/reducers/auth.tsx","store/reducers/index.tsx","api/user.ts","shared/axios.ts","store/sagas/auth.tsx","store/sagas/index.tsx","index.tsx","components/MessagesList/MessagesItem/MessagesItem.module.scss","App.module.scss","containers/Login/Login.module.scss","components/LoginForm/LoginForm.module.scss","containers/ChatRoom/ChatRoom.module.scss","components/NewMessageForm/NewMessageForm.module.scss"],"names":["module","exports","updateObject","oldState","updatedProperties","typedAction","type","payload","transformDateToUnix","currentDate","moment","unix","signInWithUsernameSuccess","user","getUserFromLocalStorageSuccess","selectCurrentUser","state","authReducer","selectSignInLoading","loading","selectSignInError","error","userExists","createSelector","currentUser","Container","styled","div","StyledInput","input","StyledButton","button","LoginForm","submit","fileError","useState","username","setUsername","file","setFile","loadingFile","setLoadingFile","useEffect","setTimeout","buttonText","className","styles","Form","onSubmit","e","preventDefault","formData","FormData","append","handleSubmit","encType","onChange","target","value","trim","placeholder","disabled","accept","Input","id","currentTarget","files","extension","name","split","toLowerCase","includes","size","fileValidation","ButtonContainer","htmlFor","Button","UploadButton","variant","color","component","ChatEvent","Label","label","Login","authMode","setAuthMode","useSelector","dispatch","useDispatch","signInUsername","signInWithUsername","SwitchTransition","mode","CSSTransition","key","addEndListener","node","done","addEventListener","classNames","enter","FadeEnter","enterActive","FadeEnterActive","exit","FadeExit","exitActive","FadeExitActive","newUser","onClick","BASE_URL","process","notificationSound","require","useChat","playing","setPlaying","messages","setMessages","currentlyOnlineUsers","setCurrentlyOnlineUsers","audio","Audio","socketRef","useRef","fetchLatestMessages","useCallback","current","emit","InitMessages","_id","socketIOClient","connect","transports","rejectUnauthorized","secure","on","NewMessage","message","onlineUsers","reverse","Disconnect","disconnect","play","removeEventListener","sendMessage","body","createdAt","StyledBadge","withStyles","theme","createStyles","badge","backgroundColor","boxShadow","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","Badge","MessageItem","userId","messageClass","Sent","Received","timestamp","date","Date","fromNow","transformUnixToDateSent","online","Object","keys","MessageContainer","MessageTop","overlap","anchorOrigin","vertical","horizontal","Avatar","alt","src","avatar","Timestamp","MessageBody","Username","React","memo","map","item","index","List","LogoutDialog","show","handleClose","logout","Dialog","style","textAlign","open","onClose","DialogContent","NewMessageForm","onFocus","onEnterPressed","onKeyPress","Textarea","fontSize","Header","onLogoutClicked","anchorEl","setAnchorEl","handleMenuClose","IconButton","Menu","event","keepMounted","Boolean","MenuItem","ChatRoom","showDialog","setShowDialog","scrollToDummyDiv","setMessage","scrollIntoView","behavior","toggleDialog","submitMessage","useMemo","users","length","Section","Main","ref","isMobile","shiftKey","textareaEnterPressed","AlertBox","closeAlert","reason","Snackbar","autoHideDuration","action","Fragment","aria-label","App","isAuthenticated","tryAutomaticSignin","window","location","hostname","match","initialState","signInWithUsernameStartHelper","signInWithUsernameSuccessHelper","signInWithUsernameFailedHelper","logoutUserSuccessHelper","getUserFromLocalStorageHelper","fileValidationHelper","closeSnackbarHelper","rootReducer","combineReducers","userApi","this","post","response","data","api","apiConfig","timeout","baseURL","headers","common","Accept","axios","create","interceptors","use","res","Promise","reject","url","config","signInUsernameSaga","logoutUserSaga","getUserFromLocalStorageSaga","put","delay","call","signinNewUser","localStorage","JSON","stringify","parse","takeEvery","rootSaga","all","AuthSagas","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4ffe7e79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2lZJa\",\"Menu\":\"Header_Menu__1y3l0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"MessagesList_List__3PU2h\"};","module.exports = __webpack_public_path__ + \"static/media/notification-sound.06426bbc.mp3\";","import moment from \"moment\";\r\n\r\nexport function updateObject<T, U>(oldState: T, updatedProperties: U): T {\r\n    return { ...oldState, ...updatedProperties };\r\n}\r\n\r\nexport function typedAction<T extends string>(type: T): { type: T };\r\n\r\nexport function typedAction<T extends string, P extends any>(\r\n    type: T,\r\n    payload: P\r\n): { type: T; payload: P };\r\n\r\nexport function typedAction(type: string, payload?: any) {\r\n    return { type, payload };\r\n}\r\n\r\nexport const transformDateToUnix = (): number => {\r\n    const currentDate = moment();\r\n    return moment(currentDate).unix();\r\n}\r\n\r\nexport const transformUnixToDateSent = (timestamp: number): string => {\r\n    const date = new Date(timestamp * 1000);\r\n    return moment(date).fromNow();\r\n}\r\n\r\nexport const fileValidation = (file: File): boolean => {\r\n    const acceptedType = ['jpg', 'jpeg', 'png'];\r\n    const extension = file.name.split('.')[1].toLowerCase();\r\n    const maxSize = 2000000;\r\n    if (!acceptedType.includes(extension) || file.size >= maxSize) return false;\r\n    return true;\r\n}","import * as actionTypes from './actionTypes';\r\nimport { typedAction } from '../../shared/utility';\r\nimport { User } from '../../types';\r\n\r\nexport const signInWithUsername = (user: User) => {\r\n    return typedAction(actionTypes.SIGN_IN_USERNAME, user);\r\n}\r\n\r\nexport const signInWithUsernameStart = () => {\r\n    return typedAction(actionTypes.SIGN_IN_USERNAME_START);\r\n}\r\n\r\nexport const signInWithUsernameSuccess = (user: User) => {\r\n    return typedAction(actionTypes.SIGN_IN_USERNAME_SUCCESS, user);\r\n}\r\n\r\nexport const signInWithUsernameFailed = (error: string) => {\r\n    return typedAction(actionTypes.SIGN_IN_USERNAME_FAILED, error);\r\n}\r\n\r\nexport const logoutUser = (id: string) => {\r\n    return typedAction(actionTypes.LOGOUT_USER, id);\r\n}\r\n\r\nexport const logoutUserSuccess = () => {\r\n    return typedAction(actionTypes.LOGOUT_USER_SUCCESS);\r\n}\r\n\r\nexport const getUserFromLocalStorage = () => {\r\n    return typedAction(actionTypes.GET_USER_LOCAL_STORAGE);\r\n}\r\n\r\nexport const getUserFromLocalStorageSuccess = (user: User | null) => {\r\n    return typedAction(actionTypes.GET_USER_LOCAL_STORAGE_SUCCESS, user);\r\n}\r\n\r\nexport const fileValidationError = () => {\r\n    return typedAction(actionTypes.FILE_VALIDATION_ERROR);\r\n}\r\n\r\nexport const closeSnackbar = () => {\r\n    return typedAction(actionTypes.CLOSE_SNACKBAR);\r\n}\r\n\r\nexport type AuthActions =\r\n    ReturnType<\r\n        typeof signInWithUsername |\r\n        typeof signInWithUsernameSuccess |\r\n        typeof signInWithUsernameStart |\r\n        typeof signInWithUsernameFailed |\r\n        typeof logoutUser |\r\n        typeof logoutUserSuccess |\r\n        typeof getUserFromLocalStorage |\r\n        typeof getUserFromLocalStorageSuccess |\r\n        typeof fileValidationError |\r\n        typeof closeSnackbar\r\n    >;","export const SIGN_IN_USERNAME_SUCCESS = 'SIGN_IN_USERNAME_SUCCESS';\r\nexport const SIGN_IN_USERNAME_FAILED = 'SIGN_IN_USERNAME_FAILED';\r\nexport const SIGN_IN_USERNAME_START = 'SIGN_IN_USERNAME_START';\r\nexport const SIGN_IN_USERNAME = 'SIGN_IN_USERNAME';\r\n\r\nexport const LOGOUT_USER_SUCCESS = 'LOGOUT_USER_SUCCESS';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\n\r\nexport const GET_USER_LOCAL_STORAGE_SUCCESS = 'GET_USER_LOCAL_STORAGE_SUCCESS';\r\nexport const GET_USER_LOCAL_STORAGE = 'GET_USER_LOCAL_STORAGE';\r\n\r\nexport const FILE_VALIDATION_ERROR = 'FILE_VALIDATION_ERROR';\r\n\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';","import { RootState } from './index';\r\nimport { createSelector } from 'reselect';\r\n\r\nexport const selectCurrentUser = (state: RootState) => state.authReducer.user;\r\nexport const selectSignInLoading = (state: RootState) => state.authReducer.loading;\r\nexport const selectSignInError = (state: RootState) => state.authReducer.error;\r\n\r\nexport const userExists = createSelector(\r\n    selectCurrentUser, currentUser => {\r\n        return currentUser !== null;\r\n    }\r\n)","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './LoginForm.module.scss';\r\nimport styled from 'styled-components'\r\nimport { fileValidation } from '../../shared/utility';\r\n\r\nconst Container = styled.div`\r\nheight: 65px;\r\nposition: relative;\r\npadding: 0.625em;\r\nbox-sizing: border-box;\r\nfont-weight: 700;\r\nbox-sizing: border-box;\r\nbox-shadow: 0 0.125em 0.3125em rgba(0, 0, 0, 0.3);\r\ndisplay: flex;\r\njustify-content: center;\r\nborder-radius: 6.25em;\r\nbackground-color: white;\r\ntransition: 300ms;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\nfont-weight: 700;\r\nfont-size: 18px;\r\nborder: 0;\r\noutline: 0;\r\nborder-radius: 5em;\r\nbox-sizing: border-box;\r\nheight: 100%;\r\nwidth: 100%;\r\npadding: 0 0.714em;\r\nbackground-color: white;\r\ncolor: #1c1f25;`;\r\n\r\nconst StyledButton = styled.button`\r\nbackground-color: #282c34;\r\ncolor: white;\r\nheight: 100%;\r\nwidth: auto;\r\nfont-size: 18px;\r\npadding: 0;\r\nheight: 100%;\r\nwidth: 160px;\r\nborder: 0;\r\nfont-weight: 700;\r\noutline: 0;\r\nborder-radius: 5em;\r\nbox-sizing: border-box;\r\ncursor: pointer;`\r\n\r\ninterface Props {\r\n    submit: (formData: any) => void;\r\n    fileError: () => void;\r\n}\r\n\r\nconst LoginForm: React.FC<Props> = ({ submit, fileError }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [file, setFile] = useState<File | null>(null);\r\n    const [loadingFile, setLoadingFile] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (file) {\r\n            setLoadingFile(true);\r\n            setTimeout(() => {\r\n                setLoadingFile(false);\r\n            }, 1000)\r\n        }\r\n\r\n    }, [file])\r\n\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        if (file) {\r\n            formData.append('file', file);\r\n        }\r\n        formData.append('username', username);\r\n        submit(formData);\r\n    }\r\n\r\n    const handleFileChanged = (e: React.FormEvent<HTMLInputElement>) => {\r\n        const file = e.currentTarget.files ? e.currentTarget.files[0] : null;\r\n        if (file) {\r\n            if (fileValidation(file)) {\r\n                setFile(file);\r\n            } else {\r\n                fileError();\r\n            }\r\n        }\r\n    }\r\n\r\n    let buttonText = 'Upload Profile Picture';\r\n    if (loadingFile) {\r\n        buttonText = 'Uploading File...';\r\n    }\r\n    if (file && !loadingFile) {\r\n        buttonText = 'Success!';\r\n    }\r\n\r\n\r\n    return (\r\n        <form className={styles.Form}\r\n            onSubmit={(e) => handleSubmit(e)}\r\n            encType=\"multipart/form-data\">\r\n            <Container>\r\n                <StyledInput\r\n                    onChange={(e) => setUsername(e.target.value.trim())}\r\n                    type=\"text\"\r\n                    placeholder=\"Username\" />\r\n                <StyledButton disabled={username === ''} type=\"submit\">Let's Go!</StyledButton>\r\n            </Container>\r\n            <input\r\n                accept=\"image/*\"\r\n                className={styles.Input}\r\n                id=\"contained-button-file\"\r\n                type=\"file\"\r\n                onChange={handleFileChanged}\r\n            />\r\n            <label className={styles.ButtonContainer} htmlFor=\"contained-button-file\">\r\n                <Button\r\n                    className={styles.UploadButton}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    component=\"span\">\r\n                    {buttonText}\r\n                </Button>\r\n            </label>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\nimport styles from './Login.module.scss';\r\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fileValidationError, signInWithUsername } from '../../store/actions/auth';\r\nimport { selectSignInLoading } from '../../store/reducers/selectors';\r\nimport { User } from '../../types';\r\nimport styled from 'styled-components'\r\nimport Form from '../../components/LoginForm/LoginForm';\r\n\r\nconst Label = styled.label`\r\nborder-radius: 6.25em;\r\nbackground-color: white;\r\nwidth: 200px;\r\nheight: 65px;\r\noutline: 0;\r\nborder: none;\r\ncursor: pointer;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nfont-size: 20px;\r\nfont-weight: 700;\r\n`;\r\n\r\nconst Login: React.FC = () => {\r\n    const [authMode, setAuthMode] = useState(false);\r\n\r\n    const loading = useSelector(selectSignInLoading);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const signInUsername = (user: User) => dispatch(signInWithUsername(user));\r\n    const fileInvalid = () => dispatch(fileValidationError());\r\n\r\n    const connectToChatRoom = (newUser: User) => {\r\n        setAuthMode(false);\r\n        signInUsername(newUser);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Login}>\r\n            <SwitchTransition mode=\"out-in\">\r\n                <CSSTransition\r\n                    key={authMode ? \"Form\" : \"Button\"}\r\n                    addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\r\n                    classNames={{\r\n                        enter: styles.FadeEnter,\r\n                        enterActive: styles.FadeEnterActive,\r\n                        exit: styles.FadeExit,\r\n                        exitActive: styles.FadeExitActive\r\n                    }}>\r\n                    {authMode\r\n                        ? <Form\r\n                            fileError={fileInvalid}\r\n                            submit={(user: User) => connectToChatRoom(user)} />\r\n                        : <Label\r\n                            onClick={() => !loading && setAuthMode(true)}>\r\n                            {loading ? 'Connecting...' : 'Start Chatting!'}\r\n                        </Label>}\r\n                </CSSTransition>\r\n            </SwitchTransition>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","export const BASE_URL = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_LOCALHOST : process.env.REACT_APP_API_URI;\r\n\r\nexport enum ChatEvent {\r\n    InitMessages = 'InitMessages',\r\n    NewMessage = 'NewMessage',\r\n    Disconnect = 'disconnect'\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { BASE_URL, ChatEvent } from \"../consts\";\r\nimport { transformDateToUnix } from \"../shared/utility\";\r\nimport { selectCurrentUser } from \"../store/reducers/selectors\";\r\nimport { Message, OnlineUsers } from \"../types\";\r\nconst notificationSound = require('../assets/notification-sound.mp3');\r\n\r\n\r\nconst useChat = () => {\r\n    const [playing, setPlaying] = useState(false);\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [currentlyOnlineUsers, setCurrentlyOnlineUsers] = useState<OnlineUsers>({});\r\n\r\n    const user = useSelector(selectCurrentUser);\r\n\r\n    const audio = new Audio(notificationSound);\r\n\r\n    const socketRef = useRef<SocketIOClient.Socket>();\r\n\r\n    const fetchLatestMessages = useCallback(() => {\r\n        socketRef.current?.emit(ChatEvent.InitMessages, user?._id);\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (user) {\r\n\r\n            socketRef.current = socketIOClient.connect(\r\n                `${BASE_URL}`,\r\n                {\r\n                    transports: ['websocket'],\r\n                    rejectUnauthorized: false,\r\n                    secure: true\r\n                }\r\n            )\r\n\r\n            socketRef.current.on(ChatEvent.NewMessage, (message: Message) => {\r\n                if (message.user._id !== user._id) {\r\n                    setPlaying(true);\r\n                }\r\n                setMessages((messages) => [...messages, message]);\r\n            });\r\n\r\n            socketRef.current.on(ChatEvent.InitMessages, (messages: Message[], onlineUsers: OnlineUsers) => {\r\n                setCurrentlyOnlineUsers(onlineUsers);\r\n                setMessages(messages.reverse());\r\n            });\r\n\r\n            socketRef.current.on(ChatEvent.Disconnect, (onlineUsers: OnlineUsers | string) => {\r\n                if (typeof onlineUsers !== 'string') {\r\n                    setCurrentlyOnlineUsers(onlineUsers);\r\n                }\r\n            });\r\n\r\n            fetchLatestMessages();\r\n\r\n        }\r\n        return () => {\r\n            socketRef.current?.disconnect();\r\n        };\r\n    }, [user, playing, fetchLatestMessages]);\r\n\r\n    useEffect(() => {\r\n        if (playing) {\r\n            audio.play();\r\n        }\r\n        audio.addEventListener('ended', () => setPlaying(false));\r\n        return () => {\r\n            audio.removeEventListener('ended', () => setPlaying(false));\r\n        };\r\n    }, [audio, playing]);\r\n\r\n    const sendMessage = (message: string) => {\r\n        socketRef.current?.emit(ChatEvent.NewMessage, {\r\n            user: user,\r\n            body: message,\r\n            createdAt: transformDateToUnix()\r\n        });\r\n    };\r\n\r\n\r\n    return { messages, sendMessage, user, currentlyOnlineUsers };\r\n};\r\n\r\nexport default useChat;","import React from 'react';\r\nimport { Message, OnlineUsers } from '../../../types';\r\nimport { transformUnixToDateSent } from '../../../shared/utility';\r\nimport styles from './MessagesItem.module.scss';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Theme, withStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledBadge = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        badge: {\r\n            backgroundColor: '#44b700',\r\n            color: '#44b700',\r\n            boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n            '&::after': {\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                width: '100%',\r\n                height: '100%',\r\n                borderRadius: '50%',\r\n                animation: '$ripple 1.2s infinite ease-in-out',\r\n                border: '1px solid currentColor',\r\n                content: '\"\"',\r\n            },\r\n        },\r\n        '@keyframes ripple': {\r\n            '0%': {\r\n                transform: 'scale(.8)',\r\n                opacity: 1,\r\n            },\r\n            '100%': {\r\n                transform: 'scale(2.4)',\r\n                opacity: 0,\r\n            },\r\n        },\r\n    }),\r\n)(Badge);\r\n\r\n\r\ninterface ItemProps {\r\n    message: Message;\r\n    currentlyOnlineUsers: OnlineUsers;\r\n    userId: string | undefined;\r\n}\r\n\r\nconst MessageItem: React.FC<ItemProps> = ({ message, userId, currentlyOnlineUsers }) => {\r\n    const messageClass = userId === message.user._id ? styles.Sent : styles.Received;\r\n    const timestamp = transformUnixToDateSent(message.createdAt);\r\n    const online = Object.keys(currentlyOnlineUsers).includes(message.user._id ? message.user._id : '');\r\n    return (\r\n        <div className={`${styles.MessageContainer} ${messageClass}`}>\r\n            <div className={styles.MessageTop}>\r\n                {online\r\n                    ? <StyledBadge\r\n                        overlap=\"circle\"\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        variant=\"dot\">\r\n                        <Avatar alt={message.user.username} src={message.user.avatar} />\r\n                    </StyledBadge>\r\n                    : <Avatar alt={message.user.username} src={message.user.avatar} />}\r\n                <p className={styles.Timestamp}>{timestamp}</p>\r\n            </div>\r\n            <div className={`${styles.MessageBody} ${messageClass}`}>\r\n                {userId !== message.user._id && <p\r\n                    className={styles.Username}>\r\n                    {message.user.username}\r\n                </p>}\r\n                <p>{message.body}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport { Message, OnlineUsers } from '../../types';\r\nimport MessageItem from './MessagesItem/MessagesItem';\r\nimport styles from './MessagesList.module.scss';\r\n\r\ninterface ListProps {\r\n    messages: Message[];\r\n    currentlyOnlineUsers: OnlineUsers;\r\n    userId: string | undefined;\r\n}\r\n\r\nconst MessagesList: React.FC<ListProps> = ({ messages, userId, currentlyOnlineUsers }) => {\r\n    const content = messages.map((item, index) => (\r\n        <MessageItem\r\n            key={`${item._id}${index}`}\r\n            message={item}\r\n            userId={userId}\r\n            currentlyOnlineUsers={currentlyOnlineUsers}\r\n        />\r\n    ));\r\n    return (\r\n        <div className={styles.List}>\r\n            {content}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(MessagesList);","import React from 'react';\r\nimport { Dialog, DialogContent } from '@material-ui/core';\r\nimport DialogTitle from '@material-ui/core/DialogTitle/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions/DialogActions';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport DialogContentText from '@material-ui/core/DialogContentText/DialogContentText';\r\n\r\ninterface Props {\r\n    show: boolean;\r\n    handleClose: () => void;\r\n    logout: () => void;\r\n}\r\n\r\nconst LogoutDialog: React.FC<Props> = ({ show, handleClose, logout }) => {\r\n    return (\r\n        <Dialog\r\n            style={{ textAlign: 'center' }}\r\n            open={show}\r\n            onClose={handleClose}>\r\n            <DialogTitle >\r\n                Are you sure?\r\n        </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    If you log out you won't be able to login with this username!\r\n        </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={logout} color=\"primary\">\r\n                    Confirm</Button>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Cancel</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default LogoutDialog;","import React, { Fragment } from 'react';\r\nimport styles from './NewMessageForm.module.scss';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\ninterface Props {\r\n    message: string;\r\n    onSubmit: (e: React.SyntheticEvent<EventTarget>) => void;\r\n    onFocus: () => void;\r\n    onEnterPressed: (e: React.KeyboardEvent) => void;\r\n    onChange: (message: string) => void;\r\n}\r\n\r\nconst NewMessageForm: React.FC<Props> = ({\r\n    message,\r\n    onSubmit,\r\n    onFocus,\r\n    onEnterPressed,\r\n    onChange\r\n}) => {\r\n    return (\r\n        <Fragment>\r\n            <form className={styles.Form} onSubmit={onSubmit}>\r\n                <textarea\r\n                    placeholder=\"Start typing here...\"\r\n                    value={message}\r\n                    onFocus={onFocus}\r\n                    onKeyPress={e => onEnterPressed(e)}\r\n                    onChange={e => onChange(e.target.value)}\r\n                    className={styles.Textarea}></textarea>\r\n                {message !== '' && <button className={styles.Button} type=\"submit\">\r\n                    <SendIcon fontSize=\"large\" style={{ color: '#6649b8' }} />\r\n                </button>}\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default NewMessageForm;","import React from 'react';\r\nimport styles from './Header.module.scss';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\ninterface Props {\r\n    onlineUsers: number;\r\n    onLogoutClicked: () => void;\r\n}\r\n\r\nconst Header: React.FC<Props> = ({ onlineUsers, onLogoutClicked }) => {\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const handleMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => setAnchorEl(event.currentTarget);\r\n    const handleMenuClose = () => setAnchorEl(null);\r\n\r\n    const handleLogoutClicked = () => {\r\n        handleMenuClose();\r\n        onLogoutClicked();\r\n    }\r\n\r\n\r\n    return (\r\n        <header className={styles.Header}>\r\n            <h2>{onlineUsers} Online</h2>\r\n            <IconButton className={styles.Menu} color=\"inherit\" onClick={handleMenuClick}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleMenuClose}\r\n            >\r\n                <MenuItem onClick={handleLogoutClicked}>Logout</MenuItem>\r\n            </Menu>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport styles from './ChatRoom.module.scss';\r\nimport { logoutUser } from '../../store/actions/auth';\r\nimport { useDispatch } from 'react-redux';\r\nimport useChat from '../../hooks/useChat';\r\nimport MessagesList from '../../components/MessagesList/MessagesList';\r\nimport { isMobile } from 'react-device-detect';\r\nimport LogoutDialog from '../../components/UI/LogoutDialog/LogoutDialog';\r\nimport NewMessageForm from '../../components/NewMessageForm/NewMessageForm';\r\nimport { OnlineUsers } from '../../types';\r\nimport Header from '../../components/Header/Header';\r\n\r\nconst calcOnlineUsers = (users: OnlineUsers) => Object.keys(users).length;\r\n\r\nconst ChatRoom: React.FC = () => {\r\n    const { messages, sendMessage, user, currentlyOnlineUsers } = useChat();\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    const scrollToDummyDiv = useRef<HTMLDivElement>(null);\r\n\r\n    const [message, setMessage] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutCurrentUser = () => {\r\n        dispatch(logoutUser(user?._id ? user._id : ''));\r\n        toggleDialog();\r\n    };\r\n\r\n    useEffect(() => {\r\n        scrollToDummyDiv.current?.scrollIntoView({\r\n            behavior: 'smooth'\r\n        });\r\n    }, [messages]);\r\n\r\n\r\n    const toggleDialog = () => setShowDialog(!showDialog);\r\n\r\n    const textareaEnterPressed = (e: React.KeyboardEvent) => {\r\n        if (isMobile) return;\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            submitMessage(e);\r\n        }\r\n    }\r\n\r\n    const submitMessage = (e: React.SyntheticEvent<EventTarget>) => {\r\n        e.preventDefault();\r\n        if (message.trim() !== '') {\r\n            sendMessage(message);\r\n        }\r\n        setMessage('');\r\n    }\r\n\r\n    const handleMobileFocus = () => {\r\n        if (isMobile) {\r\n            setTimeout(() => {\r\n                scrollToDummyDiv.current?.scrollIntoView({\r\n                    behavior: 'smooth'\r\n                });\r\n            }, 100)\r\n        }\r\n    }\r\n\r\n    const onlineUsers = useMemo(() => calcOnlineUsers(currentlyOnlineUsers), [currentlyOnlineUsers]);\r\n\r\n    return (\r\n        <div className={styles.ChatRoom}>\r\n            <Header\r\n                onlineUsers={onlineUsers}\r\n                onLogoutClicked={toggleDialog}\r\n            />\r\n            <section className={styles.Section}>\r\n                <main className={styles.Main}>\r\n                    <MessagesList\r\n                        messages={messages}\r\n                        userId={user?._id && user._id}\r\n                        currentlyOnlineUsers={currentlyOnlineUsers}\r\n                    />\r\n                    <div ref={scrollToDummyDiv}></div>\r\n                </main>\r\n                <NewMessageForm\r\n                    message={message}\r\n                    onSubmit={e => submitMessage(e)}\r\n                    onFocus={handleMobileFocus}\r\n                    onEnterPressed={e => textareaEnterPressed(e)}\r\n                    onChange={e => setMessage(e)}\r\n                />\r\n            </section>\r\n            <LogoutDialog\r\n                show={showDialog}\r\n                handleClose={toggleDialog}\r\n                logout={logoutCurrentUser} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeSnackbar } from '../../../store/actions/auth';\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    error: string;\r\n}\r\n\r\nconst AlertBox: React.FC<Props> = ({ open, error }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const closeAlert = () => dispatch(closeSnackbar());\r\n\r\n    const handleClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        closeAlert();\r\n    };\r\n\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n            }}\r\n            open={open}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n            message={error}\r\n            action={\r\n                <React.Fragment>\r\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                        <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                </React.Fragment>\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AlertBox;","import React, { useCallback, useEffect } from 'react';\r\nimport styles from './App.module.scss';\r\nimport Login from './containers/Login/Login';\r\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\r\nimport ChatRoom from './containers/ChatRoom/ChatRoom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectSignInError, userExists } from './store/reducers/selectors';\r\nimport { getUserFromLocalStorage } from './store/actions/auth';\r\nimport AlertBox from './components/UI/AlertBox/AlertBox';\r\n\r\nconst App: React.FC = () => {\r\n\r\n  const isAuthenticated = useSelector(userExists);\r\n  const error = useSelector(selectSignInError);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const tryAutomaticSignin = useCallback(() => dispatch(getUserFromLocalStorage()), [dispatch]);\r\n\r\n  useEffect(() => {\r\n    tryAutomaticSignin();\r\n  }, [tryAutomaticSignin])\r\n\r\n\r\n  return (\r\n    <div className={styles.App}>\r\n      <SwitchTransition mode=\"out-in\">\r\n        <CSSTransition\r\n          key={isAuthenticated ? \"ChatRoom\" : \"Login\"}\r\n          addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\r\n          classNames={{\r\n            enter: styles.FadeEnter,\r\n            enterActive: styles.FadeEnterActive,\r\n            exit: styles.FadeExit,\r\n            exitActive: styles.FadeExitActive\r\n          }}>\r\n          {isAuthenticated ? <ChatRoom /> : <Login />}\r\n        </CSSTransition>\r\n      </SwitchTransition>\r\n      <AlertBox open={error !== ''} error={error} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\nimport { AuthActions } from '../actions/auth';\r\nimport { User } from '../../types';\r\n\r\ninterface AuthState {\r\n    user: User | null;\r\n    loading: boolean;\r\n    error: string;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n    user: null,\r\n    loading: false,\r\n    error: '',\r\n}\r\n\r\nconst authReducer = (state = initialState, action: AuthActions) => {\r\n    switch (action.type) {\r\n        case actionTypes.SIGN_IN_USERNAME_START:\r\n            return signInWithUsernameStartHelper(state);\r\n        case actionTypes.SIGN_IN_USERNAME_SUCCESS:\r\n            return signInWithUsernameSuccessHelper(state, action.payload);\r\n        case actionTypes.SIGN_IN_USERNAME_FAILED:\r\n            return signInWithUsernameFailedHelper(state, action.payload);\r\n        case actionTypes.LOGOUT_USER_SUCCESS:\r\n            return logoutUserSuccessHelper(state);\r\n        case actionTypes.GET_USER_LOCAL_STORAGE_SUCCESS:\r\n            return getUserFromLocalStorageHelper(state, action.payload);\r\n        case actionTypes.CLOSE_SNACKBAR:\r\n            return closeSnackbarHelper(state);\r\n        case actionTypes.FILE_VALIDATION_ERROR:\r\n            return fileValidationHelper(state);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst signInWithUsernameStartHelper = (state: AuthState): AuthState => {\r\n    return updateObject(state, { loading: true });\r\n}\r\n\r\nconst signInWithUsernameSuccessHelper = (state: AuthState, payload: User): AuthState => {\r\n    return updateObject(state, { user: payload, loading: false, error: '' });\r\n}\r\n\r\nconst signInWithUsernameFailedHelper = (state: AuthState, payload: string): AuthState => {\r\n    return updateObject(state, { loading: false, error: payload });\r\n}\r\n\r\nconst logoutUserSuccessHelper = (state: AuthState): AuthState => {\r\n    return updateObject(state, { user: null });\r\n}\r\n\r\nconst getUserFromLocalStorageHelper = (state: AuthState, payload: User | null): AuthState => {\r\n    return updateObject(state, { user: payload });\r\n}\r\n\r\nconst fileValidationHelper = (state: AuthState): AuthState => {\r\n    return updateObject(state, { error: 'Only JPG/PNG files under 4MB allowed.' });\r\n}\r\n\r\nconst closeSnackbarHelper = (state: AuthState): AuthState => {\r\n    return updateObject(state, { error: '' });\r\n}\r\n\r\nexport default authReducer;\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './auth';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    authReducer: authReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { Api } from \"../shared/axios\";\r\nimport { User } from \"../types\";\r\n\r\nclass UserApi extends Api {\r\n\r\n    public async signinNewUser(user: User): Promise<User> {\r\n        const response = await this.post<User, User>('/user', user);\r\n        return response.data;\r\n    }\r\n\r\n}\r\n\r\nexport const userApi = new UserApi();","import axios, { AxiosError, AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport { BASE_URL } from \"../consts\";\r\n\r\nexport class Api {\r\n    private api: AxiosInstance;\r\n\r\n    private apiConfig: AxiosRequestConfig = {\r\n        timeout: 15000,\r\n        baseURL: BASE_URL,\r\n        headers: {\r\n            common: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n        }\r\n    };\r\n\r\n    constructor() {\r\n        this.api = axios.create(this.apiConfig);\r\n\r\n        this.api.interceptors.response.use((res: AxiosResponse) => res, (error: AxiosError) => {\r\n            return Promise.reject(error.response?.data.message);\r\n        });\r\n    }\r\n\r\n    public post<T, D, R = AxiosResponse<T>>(url: string, data: D, config?: AxiosRequestConfig): Promise<R> {\r\n        return this.api.post(url, data, config);\r\n    }\r\n}","import { call, delay, put, takeEvery } from 'redux-saga/effects';\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport { getUserFromLocalStorageSuccess, logoutUserSuccess, signInWithUsernameFailed, signInWithUsernameStart, signInWithUsernameSuccess } from '../actions/auth';\r\nimport { userApi } from '../../api/user';\r\nimport { User } from '../../types';\r\n\r\nfunction* signInUsernameSaga(action: ReturnType<typeof signInWithUsernameSuccess>) {\r\n    yield put(signInWithUsernameStart());\r\n    yield delay(500);\r\n    try {\r\n        const user: User = yield call(() => userApi.signinNewUser(action.payload));\r\n        yield call([localStorage, 'setItem'], 'currentUser', JSON.stringify(user));\r\n        yield put(signInWithUsernameSuccess(user));\r\n    } catch (e) {\r\n        yield put(signInWithUsernameFailed(e));\r\n    }\r\n}\r\n\r\nfunction* logoutUserSaga() {\r\n    yield call([localStorage, 'removeItem'], 'currentUser');\r\n    yield delay(300);\r\n    yield put(logoutUserSuccess());\r\n}\r\n\r\nfunction* getUserFromLocalStorageSaga() {\r\n    const user = yield call([localStorage, 'getItem'], 'currentUser');\r\n    yield put(getUserFromLocalStorageSuccess(JSON.parse(user)));\r\n}\r\n\r\n\r\nexport default [\r\n    takeEvery(actionTypes.SIGN_IN_USERNAME, signInUsernameSaga),\r\n    takeEvery(actionTypes.LOGOUT_USER, logoutUserSaga),\r\n    takeEvery(actionTypes.GET_USER_LOCAL_STORAGE, getUserFromLocalStorageSaga)\r\n\r\n]\r\n","import AuthSagas from './auth';\r\nimport { all } from 'redux-saga/effects';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        ...AuthSagas\r\n    ])\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { rootReducer } from './store/reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './store/sagas/index';\n\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageContainer\":\"MessagesItem_MessageContainer__2wFhC\",\"Sent\":\"MessagesItem_Sent__QgY-e\",\"MessageTop\":\"MessagesItem_MessageTop__3iBig\",\"MessageBody\":\"MessagesItem_MessageBody__14EaL\",\"Received\":\"MessagesItem_Received__10TRj\",\"Username\":\"MessagesItem_Username__1RO6m\",\"Timestamp\":\"MessagesItem_Timestamp__l3oES\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__34i3s\",\"FadeEnter\":\"App_FadeEnter__1uJf1\",\"FadeExit\":\"App_FadeExit__25tik\",\"FadeEnterActive\":\"App_FadeEnterActive__1Ptu1\",\"FadeExitActive\":\"App_FadeExitActive__2WYg3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__3N-YQ\",\"Form\":\"Login_Form__pnWm8\",\"FadeEnter\":\"Login_FadeEnter__1x6ph\",\"FadeExit\":\"Login_FadeExit__3QafQ\",\"FadeEnterActive\":\"Login_FadeEnterActive__R7AxY\",\"FadeExitActive\":\"Login_FadeExitActive__1UMCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"LoginForm_Form__2tA_z\",\"Input\":\"LoginForm_Input__1tAcP\",\"ButtonContainer\":\"LoginForm_ButtonContainer__1-cGl\",\"UploadButton\":\"LoginForm_UploadButton__1uKGu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatRoom\":\"ChatRoom_ChatRoom__2tpGe\",\"Section\":\"ChatRoom_Section__6-9S1\",\"Main\":\"ChatRoom_Main__1K5vd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"NewMessageForm_Form__3Akjw\",\"Textarea\":\"NewMessageForm_Textarea__2SzBa\",\"Button\":\"NewMessageForm_Button__1ja4G\"};"],"sourceRoot":""}